.TH "Matriz" 3 "Mon Mar 16 2015" "Version 1.0.0" "Body Tracker" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Matriz \- 
Classe que representa uma matriz e suas operações\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <matriz\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBMatriz\fP ()"
.br
.RI "\fIConstrutor padrão\&. \fP"
.ti -1c
.RI "\fBMatriz\fP (int linha, int coluna)"
.br
.RI "\fIContrutor utilizado para inicializar uma matriz com suas dimensões\&. \fP"
.ti -1c
.RI "\fBMatriz\fP * \fBMultiplicar\fP (\fBMatriz\fP *m)"
.br
.RI "\fIMétodo utilizado para multiplica duas matrizes\&. \fP"
.ti -1c
.RI "void \fBMultiplicaTransformacao\fP (\fBMatriz\fP *m)"
.br
.RI "\fISemelhante ao método Multiplicar\&. \fP"
.ti -1c
.RI "\fBMatriz\fP * \fBSomar\fP (\fBMatriz\fP *m)"
.br
.RI "\fISomar duas matrizes\&. \fP"
.ti -1c
.RI "\fBMatriz\fP * \fBTransposta\fP ()"
.br
.RI "\fICalculo da transposta da matriz atual\&. \fP"
.ti -1c
.RI "\fBMatriz\fP * \fBSubtrair\fP (\fBMatriz\fP *m)"
.br
.RI "\fISubtrair duas matrizes\&. \fP"
.ti -1c
.RI "void \fBCarregarIdentidade\fP ()"
.br
.RI "\fIPreencher a matriz atual com a matriz identidade\&. \fP"
.ti -1c
.RI "float \fBRetornaValor\fP (int indice)"
.br
.RI "\fIBuscar valor no vetor que representa a matriz\&. \fP"
.ti -1c
.RI "void \fBAlterarValor\fP (int i, double valor)"
.br
.RI "\fIAlterar valor no vetor que representa a matriz\&. \fP"
.ti -1c
.RI "void \fBAlterarValor\fP (int x, int y, double valor)"
.br
.RI "\fIAlterar valor utilizando coordenadas da matriz\&. \fP"
.ti -1c
.RI "float \fBBuscarValor\fP (int x, int y)"
.br
.RI "\fIBuscar valor utilizando coordenadas da matriz\&. \fP"
.ti -1c
.RI "int \fBGetLinha\fP ()"
.br
.RI "\fIMétodo para acessar a quantidade de linhas de uma matriz\&. \fP"
.ti -1c
.RI "int \fBGetColuna\fP ()"
.br
.RI "\fIMétodo para acessar a quantidade de colunas de uma matriz\&. \fP"
.ti -1c
.RI "GLdouble * \fBMatrixToGLDArray\fP ()"
.br
.RI "\fIConverter matriz atual um array\&. \fP"
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "std::vector< GLdouble > \fB_m\fP"
.br
.RI "\fIVetor que representa a matriz\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Classe que representa uma matriz e suas operações\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Matriz::Matriz (intlinha, intcoluna)"

.PP
Contrutor utilizado para inicializar uma matriz com suas dimensões\&. 
.PP
\fBParameters:\fP
.RS 4
\fIlinha\fP Número de linhas 
.br
\fIcoluna\fP Número de colunas 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "void Matriz::AlterarValor (inti, doublevalor)"

.PP
Alterar valor no vetor que representa a matriz\&. 
.PP
\fBParameters:\fP
.RS 4
\fIi\fP Índice direto do vetor 
.br
\fIvalor\fP Valor a ser inserido no índice do vetor 
.RE
.PP

.SS "void Matriz::AlterarValor (intx, inty, doublevalor)"

.PP
Alterar valor utilizando coordenadas da matriz\&. 
.PP
\fBParameters:\fP
.RS 4
\fIx\fP Linha 
.br
\fIy\fP Coluna 
.br
\fIvalor\fP Valor a ser inserido 
.RE
.PP

.SS "float Matriz::BuscarValor (intx, inty)"

.PP
Buscar valor utilizando coordenadas da matriz\&. 
.PP
\fBParameters:\fP
.RS 4
\fIx\fP Linha 
.br
\fIy\fP Coluna 
.RE
.PP
\fBReturns:\fP
.RS 4
Valor armazenado nas coordenadas indicadas 
.RE
.PP

.SS "void Matriz::CarregarIdentidade ()"

.PP
Preencher a matriz atual com a matriz identidade\&. [1][0][0]
.br
[0][1][0]
.br
[0][0][1]
.br
Podendo variar de acordo com as dimenções da matriz\&. 
.SS "int Matriz::GetColuna ()"

.PP
Método para acessar a quantidade de colunas de uma matriz\&. 
.PP
\fBReturns:\fP
.RS 4
Quantidade de colunas da matriz 
.RE
.PP

.SS "int Matriz::GetLinha ()"

.PP
Método para acessar a quantidade de linhas de uma matriz\&. 
.PP
\fBReturns:\fP
.RS 4
Quantidade de linhas da matriz 
.RE
.PP

.SS "GLdouble * Matriz::MatrixToGLDArray ()"

.PP
Converter matriz atual um array\&. Este método é utilizado quando for necessário um vetor GLdouble 
.PP
\fBReturns:\fP
.RS 4

.RE
.PP

.SS "\fBMatriz\fP * Matriz::Multiplicar (\fBMatriz\fP *m)"

.PP
Método utilizado para multiplica duas matrizes\&. 
.PP
\fBParameters:\fP
.RS 4
\fIm\fP \fBMatriz\fP que será multiplicada pela matriz atual 
.RE
.PP
\fBReturns:\fP
.RS 4
Uma nova matriz contendo o resultado da multiplicaçao 
.RE
.PP

.SS "void Matriz::MultiplicaTransformacao (\fBMatriz\fP *m)"

.PP
Semelhante ao método Multiplicar\&. Neste método o resultado da multiplicação é salvo na matriz atual\&. 
.PP
\fBSee also:\fP
.RS 4
\fBMultiplicar()\fP; 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIm\fP \fBMatriz\fP que será multiplicada pela matriz atual 
.RE
.PP

.SS "float Matriz::RetornaValor (intindice)"

.PP
Buscar valor no vetor que representa a matriz\&. 
.PP
\fBParameters:\fP
.RS 4
\fIindice\fP Índice direto do vetor 
.RE
.PP
\fBReturns:\fP
.RS 4
Valor armazenado no índice indicado 
.RE
.PP

.SS "\fBMatriz\fP * Matriz::Somar (\fBMatriz\fP *m)"

.PP
Somar duas matrizes\&. 
.PP
\fBParameters:\fP
.RS 4
\fIm\fP \fBMatriz\fP que será multiplicada a matriz atual 
.RE
.PP
\fBReturns:\fP
.RS 4
Uma nova matriz contendo o resultado da soma 
.RE
.PP

.SS "\fBMatriz\fP * Matriz::Subtrair (\fBMatriz\fP *m)"

.PP
Subtrair duas matrizes\&. 
.PP
\fBParameters:\fP
.RS 4
\fIm\fP \fBMatriz\fP que será subtraída a matriz atual 
.RE
.PP
\fBReturns:\fP
.RS 4
Uma nova matriz contendo o resultado da soma 
.RE
.PP

.SS "\fBMatriz\fP * Matriz::Transposta ()"

.PP
Calculo da transposta da matriz atual\&. 
.PP
\fBReturns:\fP
.RS 4
\fBMatriz\fP transposta da matriz atual 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Body Tracker from the source code\&.
